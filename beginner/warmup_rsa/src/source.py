from Crypto.Util.number import getPrime, isPrime, bytes_to_long
from secret import FLAG

def keygen(bitsize):
    while True:
        p = getPrime(bitsize)
        b = getPrime(12)
        q = p + 42*b**(bitsize//12) + 17*b**(bitsize//24) + 42*b + 1337
        if isPrime(q):
            return p, q

SIZE = 384
p, q = keygen(SIZE)
n = p*q
e = 65537
m = bytes_to_long(FLAG)
c = pow(m, e, n)
print(f"{n = }")
print(f"{c = }")

'''
n = 729873623543656312134307118912665256781357935692626903169156150433937519752782083907499829904547040251053110020584673588552287964181185247366145284580956529366829912211930759566764271125168397271330673982376560489636282781549333563
c = 55998184521830999281817039472301544636818114568295094941847806390463936789530964194822878197897166490112675455011157083179676040236474209093809166224001096815812124353799949999248500406044583901981864080093522349557347259218634936
'''